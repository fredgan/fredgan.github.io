<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C语言 on FredGan&#39;s Blog</title>
    <link>https://fredgan.github.io/tags/C%E8%AF%AD%E8%A8%80/</link>
    <description>Recent content in C语言 on FredGan&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>zh-CN</language>
    <lastBuildDate>Wed, 15 Jul 2020 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://fredgan.github.io/tags/C%E8%AF%AD%E8%A8%80/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>《C陷阱和缺陷》读书笔记（2）- 语法”陷阱“</title>
      <link>https://fredgan.github.io/post/c-traps/c-traps-chapter-two/</link>
      <pubDate>Wed, 15 Jul 2020 22:21:58 +0800</pubDate>
      <guid>https://fredgan.github.io/post/c-traps/c-traps-chapter-two/</guid>
      <description>&lt;h1 id=&#34;c陷阱和缺陷读书笔记2--语法陷阱&#34;&gt;《C陷阱和缺陷》读书笔记（2）- 语法“陷阱”&lt;/h1&gt;&#xA;&lt;p&gt;词法、语法构成语言的一个基本条件。光有一个个的单词符号是不够的，这些符号的不同组合可以表达不同的含义。&#xA;例如，声明是什么，表达式什么，语句是什么，程序是什么等等。&lt;/p&gt;&#xA;&lt;h2 id=&#34;理解函数声明&#34;&gt;理解函数声明&lt;/h2&gt;&#xA;&lt;p&gt;看看下面一个语句：&lt;/p&gt;</description>
    </item>
    <item>
      <title>《C陷阱和缺陷》读书笔记（1）- 词法”陷阱“</title>
      <link>https://fredgan.github.io/post/c-traps/c-traps-chapter-one/</link>
      <pubDate>Mon, 13 Jul 2020 22:21:58 +0800</pubDate>
      <guid>https://fredgan.github.io/post/c-traps/c-traps-chapter-one/</guid>
      <description>&lt;h1 id=&#34;c陷阱和缺陷读书笔记1--词法陷阱&#34;&gt;《C陷阱和缺陷》读书笔记（1）- 词法“陷阱”&lt;/h1&gt;&#xA;&lt;p&gt;为了敦促自己读书，特地开了一个读书笔记系列。&lt;/p&gt;&#xA;&lt;p&gt;自上大学学习了谭浩强版本的《C程序设计》以来，以及经过这么多年遭受的C/C++面试和工作的毒打，就有一个感觉，C/C++语言的设计处处充满了陷阱。编译器设计之复杂，条目细则之多，感觉远远超出了其他语言。掌握了越多的这些”细则“或者”陷阱“，就离大师就更近了一步。而这些大师们，也津津乐道于讲述自己所掌握的这些”陷阱”以彰显自己大师之风范，以在面试中能够用这些“陷阱”困住面试者为骄傲！难怪人们常说，“细节决定成败”！而程序员最需要掌握的更加是一些编程语言、编译器的细节。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
